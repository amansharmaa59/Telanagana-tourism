USE DATABASE INFORMATICA
SELECT * FROM "INFORMATICA"."PUBLIC"."DOMESTIC_VISITOR";
SELECT * FROM "INFORMATICA"."PUBLIC"."FOREIGN_VISITOR";

--LIST DOWN THE TOP 10 DISTRICTS THAT HAVE THE HIGHEST NUMBER OF DOMESTIC VISITORS OVERALL 

SELECT DISTRICT, SUM(VISITORS) FROM "INFORMATICA"."PUBLIC"."DOMESTIC_VISITOR"
WHERE VISITORS IS NOT NULL
GROUP BY 1
ORDER BY 2 DESC
LIMIT 10;

-- LIST DOWN TOP 3 DISTRICTS BASED ON COMPOUNDED ANNUAL GROWTH RATE(CAGR) OF VISITORS BETWEEN (2016-19)
CREATE TABLE CAGR AS (
WITH DOMES_VISITOR AS (
SELECT DISTRICT,YEAR, SUM(VISITORS) AS TOT_DOMES_VISITOR FROM "INFORMATICA"."PUBLIC"."DOMESTIC_VISITOR"
WHERE YEAR IN (2016,2019)
GROUP BY 1,2
),

FOREIGN_VISITOR AS 
(SELECT DISTRICT,YEAR ,SUM(VISITORS) AS TOT_FOREIGN_VISITOR FROM "INFORMATICA"."PUBLIC"."FOREIGN_VISITOR"
WHERE YEAR IN (2016,2019)
GROUP BY 1,2),

FOR_CAGR AS(
SELECT A.DISTRICT ,A.YEAR ,(A.TOT_DOMES_VISITOR + B.TOT_FOREIGN_VISITOR) AS BEGINING FROM DOMES_VISITOR A
JOIN FOREIGN_VISITOR B
ON A.DISTRICT = B.DISTRICT AND A.YEAR = B.YEAR
ORDER BY A.DISTRICT),

FINAL_TABLE AS(
SELECT DISTRICT, POW((END/CASE WHEN BEGINING IN (0,NULL) THEN 1 ELSE BEGINING END),1/4)-1 AS CAGR FROM (

SELECT DISTRICT, BEGINING , LEAD(BEGINING) OVER(PARTITION BY DISTRICT ORDER BY YEAR)AS END
FROM FOR_CAGR
) AS T)

SELECT DISTRICT , CAGR FROM FINAL_TABLE
WHERE CAGR IS NOT NULL
ORDER BY 2 DESC 
LIMIT 3)

--------------------------------------FOR BOTTOM THREE---------------------------------------------------------------------------------------------------

WITH DOMES_VISITOR AS (
SELECT DISTRICT,YEAR, SUM(VISITORS) AS TOT_DOMES_VISITOR FROM "INFORMATICA"."PUBLIC"."DOMESTIC_VISITOR"
WHERE YEAR IN (2016,2019)
GROUP BY 1,2
),

FOREIGN_VISITOR AS 
(SELECT DISTRICT,YEAR ,SUM(VISITORS) AS TOT_FOREIGN_VISITOR FROM "INFORMATICA"."PUBLIC"."FOREIGN_VISITOR"
WHERE YEAR IN (2016,2019)
GROUP BY 1,2),

FOR_CAGR AS(
SELECT A.DISTRICT ,A.YEAR ,(A.TOT_DOMES_VISITOR + B.TOT_FOREIGN_VISITOR) AS BEGINING FROM DOMES_VISITOR A
JOIN FOREIGN_VISITOR B
ON A.DISTRICT = B.DISTRICT AND A.YEAR = B.YEAR
ORDER BY A.DISTRICT),

FINAL_TABLE AS(
SELECT DISTRICT, POW((END/CASE WHEN BEGINING IN (0,NULL) THEN 1 ELSE BEGINING END),1/4)-1 AS CAGR FROM (

SELECT DISTRICT, BEGINING , LEAD(BEGINING) OVER(PARTITION BY DISTRICT ORDER BY YEAR)AS END
FROM FOR_CAGR
) AS T)

SELECT DISTRICT , CAGR FROM FINAL_TABLE
WHERE CAGR IS NOT NULL
ORDER BY 2 
LIMIT 3;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- WHAT ARE THE PEAK AND LOW SEASON MONTHS FOR HYDERABAD BASED ON THE DATA FROM 2016 TO 2019 FOR HYDERABAD DISTRICT
CREATE TABLE HYDERABAD AS (
WITH DOMES_VISITOR AS (
SELECT MONTH, SUM(VISITORS) AS TOT_DOMES_VISITOR FROM "INFORMATICA"."PUBLIC"."DOMESTIC_VISITOR"
WHERE DISTRICT = 'Hyderabad'
GROUP BY 1
),

FOREIGN_VISITOR AS 
(SELECT MONTH ,SUM(VISITORS) AS TOT_FOREIGN_VISITOR FROM "INFORMATICA"."PUBLIC"."FOREIGN_VISITOR"
WHERE DISTRICT = 'Hyderabad'
GROUP BY 1)

SELECT A.MONTH , (A.TOT_DOMES_VISITOR + B.TOT_FOREIGN_VISITOR) AS TOTAL_VISITOR FROM DOMES_VISITOR A
JOIN FOREIGN_VISITOR B
ON A.MONTH = B.MONTH
ORDER BY 2 DESC 
)

---------------------------------------------------------------LOW MONTHS -------------------------------------------------------------------------------

WITH DOMES_VISITOR AS (
SELECT MONTH, SUM(VISITORS) AS TOT_DOMES_VISITOR FROM "INFORMATICA"."PUBLIC"."DOMESTIC_VISITOR"
WHERE DISTRICT = 'Hyderabad'
GROUP BY 1
),

FOREIGN_VISITOR AS 
(SELECT MONTH ,SUM(VISITORS) AS TOT_FOREIGN_VISITOR FROM "INFORMATICA"."PUBLIC"."FOREIGN_VISITOR"
WHERE DISTRICT = 'Hyderabad'
GROUP BY 1)

SELECT A.MONTH , (A.TOT_DOMES_VISITOR + B.TOT_FOREIGN_VISITOR) AS TOTAL_VISITOR FROM DOMES_VISITOR A
JOIN FOREIGN_VISITOR B
ON A.MONTH = B.MONTH
ORDER BY 2  
LIMIT 3;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------
--SHOW THE TOP & BOTTOM 3 DISTRICTS  WITH HIGH DOMESTIC TO FOREIGN TOURIST RATIO?
CREATE TABLE RATIO AS (
WITH DOMES_VISITOR AS (
SELECT DISTRICT, SUM(VISITORS) AS TOT_DOMES_VISITOR FROM "INFORMATICA"."PUBLIC"."DOMESTIC_VISITOR"
GROUP BY 1
),

FOREIGN_VISITOR AS 
(SELECT DISTRICT ,SUM(VISITORS) AS TOT_FOREIGN_VISITOR FROM "INFORMATICA"."PUBLIC"."FOREIGN_VISITOR"
GROUP BY 1)


SELECT A.DISTRICT , (A.TOT_DOMES_VISITOR/B.TOT_FOREIGN_VISITOR) AS RATIO FROM DOMES_VISITOR A
JOIN FOREIGN_VISITOR B 
ON A.DISTRICT = B.DISTRICT
WHERE B.TOT_FOREIGN_VISITOR <> 0 
ORDER BY 2 DESC
LIMIT 3
)
--------------------------BOTTOM THREE---------------------------------------------------------------------------------------------------------------------------

WITH DOMES_VISITOR AS (
SELECT DISTRICT, SUM(VISITORS) AS TOT_DOMES_VISITOR FROM "INFORMATICA"."PUBLIC"."DOMESTIC_VISITOR"
GROUP BY 1
),

FOREIGN_VISITOR AS 
(SELECT DISTRICT ,SUM(VISITORS) AS TOT_FOREIGN_VISITOR FROM "INFORMATICA"."PUBLIC"."FOREIGN_VISITOR"
GROUP BY 1)


SELECT A.DISTRICT , (A.TOT_DOMES_VISITOR/B.TOT_FOREIGN_VISITOR) AS RATIO FROM DOMES_VISITOR A
JOIN FOREIGN_VISITOR B 
ON A.DISTRICT = B.DISTRICT
WHERE B.TOT_FOREIGN_VISITOR <> 0 
ORDER BY 2 
LIMIT 3;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

-- List the top & bottom districts on 'population to tourist footfall ratio' ratio in 2019 (ratio: Total visitors / Total Residents population in the given year)


SELECT * FROM DOMESTIC_VISITOR
SELECT * FROM FOREIGN_VISITOR
SELECT * FROM TELANAGANA_POPULATION;

WITH domestic_vistors_2019 as (
SELECT district, sum(visitors) as total_district_visitors FROM domestic_visitor
WHERE year = 2019
GROUP BY district),

 foreign_visitors_2019 AS (
SELECT district, sum(visitors) as total_foreign_visitors FROM foreign_visitor
WHERE year = 2019
GROUP BY district),

final_table as (
SELECT a.district, ((a.total_district_visitors + b.total_foreign_visitors)/ c.population) AS ratio FROM domestic_vistors_2019 a
LEFT JOIN foreign_visitors_2019 b
ON a.district = b.district
LEFT JOIN telanagana_population c
ON b.district = c.district)

SELECT district,ratio FROM final_table
WHERE ratio is not null
ORDER BY ratio DESC
LIMIT 5;

------------------------------------------BOTTOM 5------------------------------------------------------------------------------------------------------------------

WITH domestic_vistors_2019 as (
SELECT district, sum(visitors) as total_district_visitors FROM domestic_visitor
WHERE year = 2019
GROUP BY district),

 foreign_visitors_2019 AS (
SELECT district, sum(visitors) as total_foreign_visitors FROM foreign_visitor
WHERE year = 2019
GROUP BY district),

final_table as (
SELECT a.district, ((a.total_district_visitors + b.total_foreign_visitors)/ c.population) AS ratio FROM domestic_vistors_2019 a
LEFT JOIN foreign_visitors_2019 b
ON a.district = b.district
LEFT JOIN telanagana_population c
ON b.district = c.district)

SELECT district,ratio FROM final_table
WHERE ratio is not null
ORDER BY ratio 
LIMIT 5;

-----------------------------------------------------------------------------------------------------------------------------------------------------------------

WITH DOMES_VISITOR AS (
SELECT year, SUM(VISITORS) AS TOT_DOMES_VISITOR FROM "INFORMATICA"."PUBLIC"."DOMESTIC_VISITOR"
 Where district = 'Hyderabad'
GROUP BY 1
),

FOREIGN_VISITOR AS 
(SELECT year,SUM(VISITORS) AS TOT_FOREIGN_VISITOR FROM "INFORMATICA"."PUBLIC"."FOREIGN_VISITOR"
  Where district = 'Hyderabad'
GROUP BY 1)

select a.year, (TOT_DOMES_VISITOR + TOT_FOREIGN_VISITOR) as total_visitor  from DOMES_VISITOR a
left join FOREIGN_VISITOR b
on  a.year = b.year













